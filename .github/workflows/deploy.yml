name: Build Docker and Deploy to EC2

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ v* ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Go 1.18
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: Execute test command
      run: go test -v ./... --cover

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - uses: actions/checkout@v2
    - name : create env
      run: |
        echo "JWT_SECRET=${{ secrets.JWT_SECRET  }}" >> .env
        echo "AWS_REGION=${{ secrets.AWS_REGION  }}" >> .env
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
        cat .env
    - name: Build the Docker image
      run: docker build -t restuar/macaiki-backend:latest .
    - name: login docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: push image to dockerhub registry
      run: docker push restuar/macaiki-backend:latest
      
  deploy:
    name: "Deploy to EC2"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ~/macaiki-CI-CD
            git pull origin main
            docker-compose down
            docker rmi restuar/macaiki-backend:latest
            docker-compose up --build -d

  # deploy:
  #   name: "Deploy to EC2"
  #   runs-on: ubuntu-latest
  #   needs: unit-test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: executing remote ssh commands using password
  #       uses: appleboy/ssh-action@v0.1.4
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: 22
  #         script: |
  #           cd ~/macaiki-CI-CD
  #           rm -rf .env
  #           echo "APP_SERVER_HOST=${{ secrets.APP_SERVER_HOST }}" >> .env
  #           echo "APP_SERVER_PORT=${{ secrets.APP_SERVER_PORT }}" >> .env
  #           echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
  #           echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
  #           echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
  #           echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
  #           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
  #           echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
  #           echo "JWT_SECRET=${{ secrets.JWT_SECRET  }}" >> .env
  #           echo "AWS_REGION=${{ secrets.AWS_REGION  }}" >> .env
  #           echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
  #           echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
  #           echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
  #           git pull origin main
  #           docker-compose down
  #           docker rmi restuar/macaiki-backend:latest
  #           docker-compose up --build -d